Sean Blanchard
3/12/2019
LAB07
Project 3 - CheckBinaryRadixSort.java

------------------------------------------------------------------------------------------

What size array should be used?
 It should be an integer value greater than or equal to 1.
21
How many arrays should be used (number of trials)?
 It should be an integer value greater than or equal to 1.
3
What maximum number should be generated?
 It should be an integer value greater than or equal to 1.
99

TRIAL #1
The original array is: 
[86, 16, 94, 60, 99, 87, 19, 88, 29, 41, 16, 62, 63, 9, 85, 81, 86, 56, 68, 6, 46]
The original array sorted with countingSort: 
[6, 9, 16, 16, 19, 29, 41, 46, 56, 60, 62, 63, 68, 81, 85, 86, 86, 87, 88, 94, 99]
  passes

TRIAL #2
The original array is: 
[10, 45, 25, 83, 67, 54, 97, 72, 48, 28, 10, 3, 39, 15, 41, 70, 7, 68, 15, 99, 14]
The original array sorted with countingSort: 
[3, 7, 10, 10, 14, 15, 15, 25, 28, 39, 41, 45, 48, 54, 67, 68, 70, 72, 83, 97, 99]
  passes

TRIAL #3
The original array is: 
[1, 62, 39, 72, 15, 63, 51, 43, 0, 2, 98, 80, 83, 28, 70, 13, 94, 29, 37, 50, 7]
The original array sorted with countingSort: 
[0, 1, 2, 7, 13, 15, 28, 29, 37, 39, 43, 50, 51, 62, 63, 70, 72, 80, 83, 94, 98]
  passes

Process finished with exit code 0
